service: md
frameworkVersion: '3'

custom:
  stage: ${opt:stage, self:provider.stage}
  lambdaPrefix: ${self:service}-${self:custom.stage}
  resourcePrefix: ${self:service}.${self:custom.stage}
  electricityStateLogTable:
    version: 1
    name: ${self:custom.resourcePrefix}.ElectricityStateLog.v${self:custom.electricityStateLogTable.version}
  notificationSettingsTable: 
    version: 2
    name: ${self:custom.resourcePrefix}.NotificationSettings.v${self:custom.notificationSettingsTable.version}
  pythonRequirements:
    layer: true

provider:
  name: aws
  runtime: python3.9
  stage: stage
  region: eu-west-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:DescribeTable
          Resource: "arn:aws:dynamodb:${aws:region}:*:table/${self:custom.resourcePrefix}.*"

  environment:
      TIMEZONE: "Europe/Kyiv"
      TELEGRAM_TOKEN: ${file(./secrets.json):TELEGRAM_TOKEN}
      SCHEDULE_BUCKET: ${construct:schedule.bucketName}
      QUEUE_URL: ${construct:electricity-notifications.queueUrl}
      ELECTRICITY_STATE_LOG_TABLE: ${self:custom.electricityStateLogTable.name}
      NOTIFICATION_SETTINGS_TABLE: ${self:custom.notificationSettingsTable.name}
      BOT_HANDLER_SECRET: ${file(./secrets.json):BOT_HANDLER_SECRET}
      DEVICE_HANDLER_SECRET: ${file(./secrets.json):DEVICE_HANDLER_SECRET}
      APIGW_UID: !Ref "ApiGatewayRestApi"
      APIGW_URL:
        !Join
          - ''
          - - 'https://'
            - !Ref ApiGatewayRestApi
            - '.execute-api.'
            - ${opt:region, self:provider.region}
            - '.amazonaws.com/'
            - ${opt:stage, self:provider.stage}
      BOT_WEBHOOK_URL: ${provider:environment.APIGW_URL}/${provider:environment.BOT_HANDLER_SECRET}/

constructs:
    schedule:
      type: storage
    electricity-notifications:
        type: queue
        worker:
            name: ${self:custom.lambdaPrefix}-notifications-handler
            handler: lambda_handler.notifications_handler
            package:
              individually: true
              exclude:
                - "**/*"
              include:
                - "app/**/*"
                - "*.py"
            layers:
              - Ref: PythonRequirementsLambdaLayer
functions:
  bot_handler:
    name: ${self:custom.lambdaPrefix}-bot-handler
    handler: lambda_handler.bot_handler_entry
    package:
      individually: true
      exclude:
        - "**/*"
      include:
        - "app/**/*"
        - "*.py"
    layers:
      - Ref: PythonRequirementsLambdaLayer
    events:
      - http:
          path: /${file(./secrets.json):BOT_HANDLER_SECRET}/
          method: post
          cors: true
  electricity_state_change_handler:
    name: ${self:custom.lambdaPrefix}-device-handler
    handler: lambda_handler.electricity_state_change_handler
    package:
      individually: true
      exclude:
        - "**/*"
      include:
        - "app/**/*"
        - "*.py"
    layers:
      - Ref: PythonRequirementsLambdaLayer
    events:
      - http:
          path: /${file(./secrets.json):DEVICE_HANDLER_SECRET}/set-state
          method: post
          cors: true

plugins:
  - serverless-lift
  - serverless-python-requirements
  - serverless-export-env

resources:
  Resources:
    ElectricityStateLogTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.electricityStateLogTable.name}
        AttributeDefinitions:
          -
            AttributeName: type
            AttributeType: S
          -
            AttributeName: created
            AttributeType: S
        KeySchema:
          -
            AttributeName: type
            KeyType: HASH
          -
            AttributeName: created
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    NotificationSettingsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.notificationSettingsTable.name}
        AttributeDefinitions:
          -
            AttributeName: enabled
            AttributeType: N
          -
            AttributeName: user_id
            AttributeType: S
        KeySchema:
          -
            AttributeName: enabled
            KeyType: HASH
          -
            AttributeName: user_id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
